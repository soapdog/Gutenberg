//Below is a list of the Sass rules that could not be converted to Stylus
// @each: line 68 in your Sass file


@media screen and (min-width: (interpolation nil (:plus (:plus $max-width 5) em) nil))
  $leading = $leading-desktop
  $leading-rem = $leading-rem-desktop
  $hr-margin = $hr-margin-desktop
  @import 'gutenberg-mixins'
  body, html
    margin: 0
    width: 100%
    max-width: none
  // Reset line-height and margins for desktop, set max-width
  *
    max-width: {$max-width * $base-desktop + "px"}
    max-width: {$max-width + "rem"}
    margin-left: auto !important
    margin-right: auto !important
    line-height(1)
    margin-bottom(1)
  // Reset base font size for desktop
  html
    font-size: {$base-desktop + "px"}
    font-size: {$base-font-size-desktop / 100 + "rem"}
  // Paragraph indent
  if $paragraph-indent == true
    p + p, .floatLeft + p, .floatRight + p
      margin-top(-1)
      text-indent: {$leading + "px"}
      text-indent: {$leading-rem + "rem"}
  .toggleWrapper
    top: {$leading-desktop + "px"}
    right: {$leading-desktop + "px"}
  // Reset grid for desktop line-height
  .grid
    background-size: 100% {$leading + "px"}
    background-size: 100% {$leading-rem + "rem"}
  .grid-double
    background-image: linear-gradient(to bottom, hsla(200, 100%, 50%, 0.3) 1px, transparent 1px, transparent {0.5 * $leading + "px"}, hsla(200, 100%, 50%, 0.2) {0.5 * $leading + "px"}, transparent {0.5 * $leading + 1 + "px"}, transparent {$leading + "px"})
  // Set max-wdith for article
  article
    max-width: {1.5 * $max-width * $base-desktop + "px"}
    max-width: {1.5 * $max-width + "rem"}
  .btnToggleGrid
    top: {$leading + "px"}
    right: {$leading + "px"}
  // Heading sizes, line-heights and margins
  //Cannot convert multi-variable each loops to Stylus
  //@each $heading, $properties in $headings
  //  #{$heading}
  //    +font-size(nth($properties, 1))
  //    +line-height(nth($properties, 2))
  //    +margin-top(nth($properties, 3))
  //    +margin-bottom(nth($properties, 4))
  // Set margins between headings
  h1 + h2
    margin-top(1)
  h2 + h3, h3 + h4, h4 + h5
    margin-top(0.5)
  h5 + h6
    margin-top(-0.5)
  // Quotes
  figure blockquote
    padding(2, 0, 1)
    text-align: center
    p
      font-size(1.6875)
      line-height(1.5)
  // Floated images width & padding
  figure.floatLeft,
	figure.floatRight
    max-width: {0.5 * $max-width * $base-desktop + "px"}
    max-width: {0.5 * $max-width + "rem"}
    blockquote
      text-align: left
      padding-equal(0)
      if $paragraph-indent == true
        margin-top(1)
      p
        font-size(1.2)
        line-height(1)
    if $paragraph-indent == true
      padding-equal(1)
      margin-bottom(0)
    else
      padding(0, 1)
  // Set figcaption line-height for desktop
  figcaption
    line-height(1)
    margin-bottom: 0
  // Float defaults
  .floatLeft
    float: left
  .floatCenter
    margin-left: auto
    margin-right: auto
  .floatRight
    float: right
  // Blockquote indent
  blockquote
    padding-left: 2rem
  // Set small line-height
  small
    line-height(0.5)
  // Horizontal rule
  hr
    margin-top($hr-margin)
    margin-bottom($hr-margin)
    height: {$leading + "px"}
    height: {$leading-rem + "rem"}
    if $hr-style == "line"
      background-size: 100% {$leading + "px"}
      background-size: 100% {$leading-rem + "rem"}
      background-image: linear-gradient(to bottom, transparent 1px, transparent {0.5 * $leading - 0.5 * $hr-height + "px"}, $hr-color {0.5 * $leading - 0.5 * $hr-height + "px"}, $hr-color {0.5 * $leading - 0.5 * $hr-height + $hr-height + "px"}, transparent {0.5 * $leading - 0.5 * $hr-height + $hr-height + "px"}, transparent {$leading + "px"})
  code
    padding-equal(1)
  // Attention grabber
  .attention-grabber
    font-size(1.2)